{"version":3,"sources":["form.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","resetMessages","document","querySelectorAll","forEach","classList","remove","addEventListener","testimonialForm","getElementById","preventDefault","console","log","data","name","querySelector","value","email","message","test","String","toLowerCase","validateEmail","url","dataset","params","URLSearchParams","FormData","add","fetch","method","body","then","results","res","json","catch","error","response"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aA6DA,SAASK,IAGJC,SAASC,iBAAiB,cAAcC,QAAQ,SAAUhB,GACrD,OAAOA,EAAEiB,UAAUC,OAAO,UA/DpCJ,SAASK,iBAAiB,mBAAoB,SAAUxB,GAEnD,IAAIyB,EAAkBN,SAASO,eAAe,wBAE9CD,EAAgBD,iBAAiB,SAAU,SAAUxB,GAChDA,EAAE2B,iBACFC,QAAQC,IAAI,0BAGZX,IAIA,IAAIY,EAAO,CAENC,KAAMN,EAAgBO,cAAc,iBAAiBC,MACrDC,MAAOT,EAAgBO,cAAc,kBAAkBC,MACvDE,QAASV,EAAgBO,cAAc,oBAAoBC,OAKhE,GAHAL,QAAQC,IAAIC,GAGPA,EAAKC,KAIV,GAAKD,EAAKI,MAIV,GAoCV,SAAuBA,GAElB,MADS,0JACCE,KAAKC,OAAOH,GAAOI,eAtCnBC,CAAcT,EAAKI,OAIxB,GAAKJ,EAAKK,QAAV,CAMA,IAAIK,EAAMf,EAAgBgB,QAAQD,IAE9BE,EAAS,IAAIC,gBAAgB,IAAIC,SAASnB,IAE9CA,EAAgBO,cAAc,uBAAuBV,UAAUuB,IAAI,QACnEC,MAAMN,EAAK,CACNO,OAAQ,OACRC,KAAMN,IACRO,KAAK,SAAUC,GACb,OAAOC,IAAIC,SACbC,MAAM,SAAUC,GACdpC,IACAO,EAAgBO,cAAc,kBAAkBV,UAAUuB,IAAI,UAChEI,KAAK,SAAUM,GACbrC,WAnBAO,EAAgBO,cAAc,iCAAiCV,UAAUuB,IAAI,aAJ7EpB,EAAgBO,cAAc,+BAA+BV,UAAUuB,IAAI,aAJ3EpB,EAAgBO,cAAc,+BAA+BV,UAAUuB,IAAI,aAJ3EpB,EAAgBO,cAAc,8BAA8BV,UAAUuB,IAAI,aAgDvF,KAAK,GAAG,CAAC","file":"form.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\ndocument.addEventListener('DOMContentLoaded', function (e) {\n     /* We need to prevent the form submit */\n     var testimonialForm = document.getElementById('mtk-testimonial-form');\n     /* (e) => is the equivalent of writing function (e) */\n     testimonialForm.addEventListener('submit', function (e) {\n          e.preventDefault();\n          console.log('Prevent form to submit');\n\n          //Reset the form Messeges\n          resetMessages();\n\n          //collect all the data\n          /* let is another way of definining a variable */\n          var data = {\n               /* We use the [] to specify an attribute */\n               name: testimonialForm.querySelector('[name=\"name\"]').value,\n               email: testimonialForm.querySelector('[name=\"email\"]').value,\n               message: testimonialForm.querySelector('[name=\"message\"]').value\n          };\n          console.log(data);\n\n          //Validate Data\n          if (!data.name) {\n               testimonialForm.querySelector('[data-error=\"invalidName\"]').classList.add('show');\n               return;\n          }\n          if (!data.email) {\n               testimonialForm.querySelector('[data-error=\"invalidEmail\"]').classList.add('show');\n               return;\n          }\n          if (!validateEmail(data.email)) {\n               testimonialForm.querySelector('[data-error=\"invalidEmail\"]').classList.add('show');\n               return;\n          }\n          if (!data.message) {\n               testimonialForm.querySelector('[data-error=\"invalidMessage\"]').classList.add('show');\n               return;\n          }\n\n          //ajax http post request\n          var url = testimonialForm.dataset.url;\n          /* We are going to use the fetch method of VanillaJS so we need to prepare the parameters.*/\n          var params = new URLSearchParams(new FormData(testimonialForm));\n          /* We display something to show the user the form is being processed */\n          testimonialForm.querySelector('.js-form-submission').classList.add('show');\n          fetch(url, {\n               method: \"POST\",\n               body: params\n          }).then(function (results) {\n               return res.json();\n          }).catch(function (error) {\n               resetMessages();\n               testimonialForm.querySelector('.js-form-error').classList.add('show');\n          }).then(function (response) {\n               resetMessages();\n               /* Deal with the response */\n          });\n     });\n});\nfunction resetMessages() {\n     /* Remove the active class from the field messages */\n     /* f Stands for field */\n     document.querySelectorAll('.field-msg').forEach(function (f) {\n          return f.classList.remove('show');\n     });\n}\nfunction validateEmail(email) {\n     var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n     return re.test(String(email).toLowerCase());\n}\n\n},{}]},{},[1]);\n"]}